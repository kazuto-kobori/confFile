# description
# WSL 上で複数のタブを開いても
# ssh-agent を再利用できるようにするためのスクリプト

# HOW TO USE
# <key_file> を書き換えること
# source <This script>
# or . <This script>

# ref
# https://qiita.com/wing-tail/items/66ddcfe352664a182ba1

# https://www.gnu.org/software/bash/manual/bash.txt

#3.6.4 Redirecting Standard Output and Standard Error
#     &>WORD こっちがいいらしい
#     >&WORD
#     >WORD 2>&1

ssh_agent_file="$HOME/.ssh/ssh_agent"
umask_num=`umask`

# すでに ssh-agent の設定が存在すれば、それを読み込んで
# 既に起動している ssh-agent プロセスを再利用
[ -f $ssh_agent_file ] && source $ssh_agent_file &> /dev/null

# ssh-add がエラーを返すなら、ssh-agent プロセスが存在しないものとして
# これを起動しつつ、設定をファイルに出力
if ! ssh-add -l &> /dev/null; then
  #umask 066 && ssh-agent > $ssh_agent_file &> /dev/null
  umask 066 && ssh-agent > $ssh_agent_file
  umask $umask_num
  source $ssh_agent_file
  # $HOME/.ssh 配下にある id_rsa という名前のファイルを ssh-add
  find $HOME/.ssh -name "*id_rsa" | xargs ssh-add
  #ssh-add $HOME/.ssh/<key_file>
fi

# .bash_logout に ssh-agent を終了して、
# $ssh_agent_file を削除するスクリプトを追加
if ! egrep "^# from ~/ssh_agent.sh" $HOME/.bash_logout &> /dev/null; then
  cp -an $HOME/.bash_logout{,.default} &> /dev/null
  cat << '_EOF_' >> $HOME/.bash_logout

# Do not edit this section
# It is automatically generated by script
# from ~/ssh_agent.sh
ssh_agent_file="$HOME/.ssh/ssh_agent"
if [ `ps aux | grep "\-bash" | grep -v grep | wc -l` -eq 2 ]; then
  if [ -f $ssh_agent_file ]; then
  source $ssh_agent_file &> /dev/null
    if ssh-add -l &> /dev/null; then
      echo "killing ssh-agent"
      kill $SSH_AGENT_PID
	  \rm -f $ssh_agent_file
      echo "done"
	  sleep 1
    fi
  fi
fi
# end section
_EOF_
fi

unset ssh_agent_file
unset umask_num
